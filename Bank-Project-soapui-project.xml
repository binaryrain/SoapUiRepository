<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="180eda71-45d4-4474-bfa4-c8ea8d134fd5" activeEnvironment="Default" name="Bank Project" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="2d239da6-284b-4172-aca0-b617006fbfda" wsaVersion="NONE" name="BLZServiceSOAP11Binding" type="wsdl" bindingName="{http://thomas-bayer.com/blz/}BLZServiceSOAP11Binding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/ab42596/Desktop/BLZService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ab42596/Desktop/BLZService.wsdl"><con:part><con:url>file:/C:/Users/ab42596/Desktop/BLZService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://thomas-bayer.com/blz/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://thomas-bayer.com/blz/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>BLZService</wsdl:documentation>
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://thomas-bayer.com/blz/">
      <xsd:element name="getBank" type="tns:getBankType"/>
      <xsd:element name="getBankResponse" type="tns:getBankResponseType"/>
      <xsd:complexType name="getBankType">
        <xsd:sequence>
          <xsd:element name="blz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getBankResponseType">
        <xsd:sequence>
          <xsd:element name="details" type="tns:detailsType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="detailsType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="bezeichnung" type="xsd:string"/>
          <xsd:element minOccurs="0" name="bic" type="xsd:string"/>
          <xsd:element minOccurs="0" name="ort" type="xsd:string"/>
          <xsd:element minOccurs="0" name="plz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getBank">
    <wsdl:part name="parameters" element="tns:getBank"/>
  </wsdl:message>
  <wsdl:message name="getBankResponse">
    <wsdl:part name="parameters" element="tns:getBankResponse"/>
  </wsdl:message>
  <wsdl:portType name="BLZServicePortType">
    <wsdl:operation name="getBank">
      <wsdl:input message="tns:getBank"/>
      <wsdl:output message="tns:getBankResponse" wsaw:Action="http://thomas-bayer.com/blz/BLZService/getBankResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BLZServiceSOAP11Binding" type="tns:BLZServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceSOAP12Binding" type="tns:BLZServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap12:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceHttpBinding" type="tns:BLZServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBank">
      <http:operation location="BLZService/getBank"/>
      <wsdl:input>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BLZService">
    <wsdl:port name="BLZServiceSOAP11port_http" binding="tns:BLZServiceSOAP11Binding">
      <soap:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceSOAP12port_http" binding="tns:BLZServiceSOAP12Binding">
      <soap12:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceHttpport" binding="tns:BLZServiceHttpBinding">
      <http:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8088/BLZLocalService</con:endpoint><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint></con:endpoints><con:operation id="968959bb-52a8-40fb-b4dd-88d08ea75235" isOneWay="false" action="" name="getBank" bindingOperationName="getBank" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f6f4ee8b-5552-4c4f-b7b3-7f4764fce56c" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/BLZLocalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>55010111</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7d4a31fc-0154-4903-8d67-fe2e75bdf21d" wsaVersion="NONE" name="BLZServiceSOAP12Binding" type="wsdl" bindingName="{http://thomas-bayer.com/blz/}BLZServiceSOAP12Binding" soapVersion="1_2" anonymous="optional" definition="file:/C:/Users/ab42596/Desktop/BLZService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\ab42596\Desktop\BLZService.wsdl"><con:part><con:url>file:\C:\Users\ab42596\Desktop\BLZService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://thomas-bayer.com/blz/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://thomas-bayer.com/blz/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>BLZService</wsdl:documentation>
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://thomas-bayer.com/blz/">
      <xsd:element name="getBank" type="tns:getBankType"/>
      <xsd:element name="getBankResponse" type="tns:getBankResponseType"/>
      <xsd:complexType name="getBankType">
        <xsd:sequence>
          <xsd:element name="blz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getBankResponseType">
        <xsd:sequence>
          <xsd:element name="details" type="tns:detailsType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="detailsType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="bezeichnung" type="xsd:string"/>
          <xsd:element minOccurs="0" name="bic" type="xsd:string"/>
          <xsd:element minOccurs="0" name="ort" type="xsd:string"/>
          <xsd:element minOccurs="0" name="plz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getBank">
    <wsdl:part name="parameters" element="tns:getBank"/>
  </wsdl:message>
  <wsdl:message name="getBankResponse">
    <wsdl:part name="parameters" element="tns:getBankResponse"/>
  </wsdl:message>
  <wsdl:portType name="BLZServicePortType">
    <wsdl:operation name="getBank">
      <wsdl:input message="tns:getBank"/>
      <wsdl:output message="tns:getBankResponse" wsaw:Action="http://thomas-bayer.com/blz/BLZService/getBankResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BLZServiceSOAP11Binding" type="tns:BLZServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceSOAP12Binding" type="tns:BLZServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap12:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceHttpBinding" type="tns:BLZServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBank">
      <http:operation location="BLZService/getBank"/>
      <wsdl:input>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BLZService">
    <wsdl:port name="BLZServiceSOAP11port_http" binding="tns:BLZServiceSOAP11Binding">
      <soap:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceSOAP12port_http" binding="tns:BLZServiceSOAP12Binding">
      <soap12:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceHttpport" binding="tns:BLZServiceHttpBinding">
      <http:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint></con:endpoints><con:operation id="f61bfb0e-9749-40fd-9d3f-e15d9f507335" isOneWay="false" action="" name="getBank" bindingOperationName="getBank" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8fb52f58-5881-497e-9490-1bb310b25a02" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <blz:getBank>\r
         <blz:blz>?</blz:blz>\r
      </blz:getBank>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2e23f8a0-6e10-4114-b49f-47fc915e1b26" wsaVersion="NONE" name="MediCareSupplierSoap12" type="wsdl" bindingName="{http://www.webservicex.net/}MediCareSupplierSoap12" soapVersion="1_2" anonymous="optional" definition="file:/C:/Users/ab42596/Desktop/medicareSupplier.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ab42596/Desktop/medicareSupplier.wsdl"><con:part><con:url>file:/C:/Users/ab42596/Desktop/medicareSupplier.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webservicex.net/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webservicex.net/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webservicex.net/">
      <s:element name="GetSupplierByZipCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="zip" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByZipCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByZipCodeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="SupplierDataList">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierDatas" type="tns:ArrayOfSupplierData"/>
          <s:element minOccurs="1" maxOccurs="1" name="TotalRecords" type="s:int"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfSupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="SupplierData" type="tns:SupplierData"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="SupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierNumber" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="CompanyName" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address1" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address2" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Zip" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ZipPlus4" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Telephone" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="IsSupplierParticipating" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetSupplierByCity">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByCityResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByCityResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="description" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierBySupplyTypeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetSupplierByZipCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCode"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByZipCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByCity"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByCityResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyType"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyTypeResponse"/>
  </wsdl:message>
  <wsdl:portType name="MediCareSupplierSoap">
    <wsdl:operation name="GetSupplierByZipCode">
      <wsdl:documentation>Get Supplier details by Zip Code</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByZipCodeSoapIn"/>
      <wsdl:output message="tns:GetSupplierByZipCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <wsdl:documentation>Get Supplier details by City</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByCitySoapIn"/>
      <wsdl:output message="tns:GetSupplierByCitySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <wsdl:documentation>Get Supplier details by Supply Type</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierBySupplyTypeSoapIn"/>
      <wsdl:output message="tns:GetSupplierBySupplyTypeSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="MediCareSupplierHttpGet"/>
  <wsdl:portType name="MediCareSupplierHttpPost"/>
  <wsdl:binding name="MediCareSupplierSoap" type="tns:MediCareSupplierSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierSoap12" type="tns:MediCareSupplierSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpGet" type="tns:MediCareSupplierHttpGet">
    <http:binding verb="GET"/>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpPost" type="tns:MediCareSupplierHttpPost">
    <http:binding verb="POST"/>
  </wsdl:binding>
  <wsdl:service name="MediCareSupplier">
    <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
    <wsdl:port name="MediCareSupplierSoap" binding="tns:MediCareSupplierSoap">
      <soap:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierSoap12" binding="tns:MediCareSupplierSoap12">
      <soap12:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpGet" binding="tns:MediCareSupplierHttpGet">
      <http:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpPost" binding="tns:MediCareSupplierHttpPost">
      <http:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint></con:endpoints><con:operation id="9cbedf63-6a8e-4d3d-968a-bbd28a270c9f" isOneWay="false" action="http://www.webservicex.net/GetSupplierByCity" name="GetSupplierByCity" bindingOperationName="GetSupplierByCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="be55d4d4-3bad-4172-8c88-b00c34684596" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierByCity>\r
         <!--Optional:-->\r
         <web:City>?</web:City>\r
      </web:GetSupplierByCity>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierByCityRequest"/></con:call></con:operation><con:operation id="c1768312-f7f5-4246-b147-06e9bd1d88b9" isOneWay="false" action="http://www.webservicex.net/GetSupplierBySupplyType" name="GetSupplierBySupplyType" bindingOperationName="GetSupplierBySupplyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d62144aa-1f26-41f9-8727-aadf77185823" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierBySupplyType>\r
         <!--Optional:-->\r
         <web:description>?</web:description>\r
      </web:GetSupplierBySupplyType>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierBySupplyTypeRequest"/></con:call></con:operation><con:operation id="5915b17d-197c-4db7-ab51-5ded9958fafd" isOneWay="false" action="http://www.webservicex.net/GetSupplierByZipCode" name="GetSupplierByZipCode" bindingOperationName="GetSupplierByZipCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4e8d7dee-d2b3-4f19-96d8-b49864ab620f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>?</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierByZipCodeRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e16d69d4-d705-42b5-acb9-d840a8985b48" wsaVersion="NONE" name="MediCareSupplierSoap" type="wsdl" bindingName="{http://www.webservicex.net/}MediCareSupplierSoap" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/ab42596/Desktop/medicareSupplier.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ab42596/Desktop/medicareSupplier.wsdl"><con:part><con:url>file:/C:/Users/ab42596/Desktop/medicareSupplier.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webservicex.net/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webservicex.net/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webservicex.net/">
      <s:element name="GetSupplierByZipCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="zip" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByZipCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByZipCodeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="SupplierDataList">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierDatas" type="tns:ArrayOfSupplierData"/>
          <s:element minOccurs="1" maxOccurs="1" name="TotalRecords" type="s:int"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfSupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="SupplierData" type="tns:SupplierData"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="SupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierNumber" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="CompanyName" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address1" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address2" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Zip" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ZipPlus4" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Telephone" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="IsSupplierParticipating" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetSupplierByCity">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByCityResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByCityResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="description" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierBySupplyTypeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetSupplierByZipCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCode"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByZipCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByCity"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByCityResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyType"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyTypeResponse"/>
  </wsdl:message>
  <wsdl:portType name="MediCareSupplierSoap">
    <wsdl:operation name="GetSupplierByZipCode">
      <wsdl:documentation>Get Supplier details by Zip Code</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByZipCodeSoapIn"/>
      <wsdl:output message="tns:GetSupplierByZipCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <wsdl:documentation>Get Supplier details by City</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByCitySoapIn"/>
      <wsdl:output message="tns:GetSupplierByCitySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <wsdl:documentation>Get Supplier details by Supply Type</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierBySupplyTypeSoapIn"/>
      <wsdl:output message="tns:GetSupplierBySupplyTypeSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="MediCareSupplierHttpGet"/>
  <wsdl:portType name="MediCareSupplierHttpPost"/>
  <wsdl:binding name="MediCareSupplierSoap" type="tns:MediCareSupplierSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierSoap12" type="tns:MediCareSupplierSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpGet" type="tns:MediCareSupplierHttpGet">
    <http:binding verb="GET"/>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpPost" type="tns:MediCareSupplierHttpPost">
    <http:binding verb="POST"/>
  </wsdl:binding>
  <wsdl:service name="MediCareSupplier">
    <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
    <wsdl:port name="MediCareSupplierSoap" binding="tns:MediCareSupplierSoap">
      <soap:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierSoap12" binding="tns:MediCareSupplierSoap12">
      <soap12:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpGet" binding="tns:MediCareSupplierHttpGet">
      <http:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpPost" binding="tns:MediCareSupplierHttpPost">
      <http:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint></con:endpoints><con:operation id="f2e3b640-c71c-4db3-b63c-181196b47f99" isOneWay="false" action="http://www.webservicex.net/GetSupplierByCity" name="GetSupplierByCity" bindingOperationName="GetSupplierByCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d37e3654-a359-4768-a0b2-56bea0f77f6d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByCity>\r
         <!--Optional:-->\r
         <web:City>?</web:City>\r
      </web:GetSupplierByCity>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByCity"/></con:call></con:operation><con:operation id="f48a1ad1-abbe-4a43-ac72-0f3c068a6216" isOneWay="false" action="http://www.webservicex.net/GetSupplierBySupplyType" name="GetSupplierBySupplyType" bindingOperationName="GetSupplierBySupplyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f7a6bd01-fa03-4f93-9a1c-6a73b940e95b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierBySupplyType>\r
         <!--Optional:-->\r
         <web:description>?</web:description>\r
      </web:GetSupplierBySupplyType>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierBySupplyType"/></con:call></con:operation><con:operation id="02361c9a-8b70-43f9-ab08-e2fb84abaab6" isOneWay="false" action="http://www.webservicex.net/GetSupplierByZipCode" name="GetSupplierByZipCode" bindingOperationName="GetSupplierByZipCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1972211b-e7b6-4101-a2b9-f7ff99104563" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>75070</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByZipCode"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cf487ac4-d8db-4c76-a21a-f2452dbf8e50" wsaVersion="NONE" name="Ws_EMBinding" type="wsdl" bindingName="{http://soap.sforce.com/schemas/class/Ws_EM}Ws_EMBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/ab42596/Desktop/Ws_EM.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ab42596/Desktop/Ws_EM.xml"><con:part><con:url>file:/C:/Users/ab42596/Desktop/Ws_EM.xml</con:url><con:content><![CDATA[<!--Web Services API : Ws_EM-->
<definitions targetNamespace="http://soap.sforce.com/schemas/class/Ws_EM" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soap.sforce.com/schemas/class/Ws_EM" xmlns:QwestSFDCResponse="http://soap.sforce.com/schemas/class/QwestSFDCResponse">
  <types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://soap.sforce.com/schemas/class/QwestSFDCResponse">
      <xsd:complexType name="QwestSFDCResponse">
        <xsd:sequence>
          <xsd:element name="message" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="success" minOccurs="0" type="xsd:boolean" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://soap.sforce.com/schemas/class/Ws_EM">
      <xsd:import namespace="http://soap.sforce.com/schemas/class/QwestSFDCResponse"/>
      <xsd:element name="AllowFieldTruncationHeader">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="allowFieldTruncation" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="CallOptions">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="client" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="DebuggingHeader">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="categories" minOccurs="0" maxOccurs="unbounded" type="tns:LogInfo"/>
            <xsd:element name="debugLevel" type="tns:LogType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="LogInfo">
        <xsd:sequence>
          <xsd:element name="category" type="tns:LogCategory"/>
          <xsd:element name="level" type="tns:LogCategoryLevel"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="LogCategory">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Db"/>
          <xsd:enumeration value="Workflow"/>
          <xsd:enumeration value="Validation"/>
          <xsd:enumeration value="Callout"/>
          <xsd:enumeration value="Apex_code"/>
          <xsd:enumeration value="Apex_profiling"/>
          <xsd:enumeration value="Visualforce"/>
          <xsd:enumeration value="System"/>
          <xsd:enumeration value="All"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LogCategoryLevel">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="None"/>
          <xsd:enumeration value="Finest"/>
          <xsd:enumeration value="Finer"/>
          <xsd:enumeration value="Fine"/>
          <xsd:enumeration value="Debug"/>
          <xsd:enumeration value="Info"/>
          <xsd:enumeration value="Warn"/>
          <xsd:enumeration value="Error"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LogType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="None"/>
          <xsd:enumeration value="Debugonly"/>
          <xsd:enumeration value="Db"/>
          <xsd:enumeration value="Profiling"/>
          <xsd:enumeration value="Callout"/>
          <xsd:enumeration value="Detail"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="DebuggingInfo">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="debugLog" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SessionHeader">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="ID">
        <xsd:restriction base="xsd:string">
          <xsd:length value="18"/>
          <xsd:pattern value="[a-zA-Z0-9]{18}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="EMOrderUpdateRequest">
        <xsd:sequence>
          <xsd:element name="OpportunityId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="RequestId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="RequestStatus" minOccurs="0" type="xsd:string" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EMServiceOrderDetailRequest">
        <xsd:sequence>
          <xsd:element name="CoreSalesOrderId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="CustomerAcctId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="OESOrderId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="ProductAcctId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="RequestId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="ServiceAddressId" minOccurs="0" type="xsd:string" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EMUpdateEBOFOrderRequest">
        <xsd:sequence>
          <xsd:element name="AccountIds" minOccurs="0" maxOccurs="unbounded" type="xsd:string" nillable="true"/>
          <xsd:element name="ActionCode" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="CUID" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="OpportunityId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="ReasonDesc" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="RequestId" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="RequestStatus" minOccurs="0" type="xsd:string" nillable="true"/>
          <xsd:element name="ServiceCategoryCd" minOccurs="0" type="xsd:string" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SFDC_Order_Update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="request" type="tns:EMOrderUpdateRequest" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SFDC_Order_UpdateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="QwestSFDCResponse:QwestSFDCResponse" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SFDC_Service_Detail_Update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="request" type="tns:EMServiceOrderDetailRequest" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SFDC_Service_Detail_UpdateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="QwestSFDCResponse:QwestSFDCResponse" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="UpdateEBOFOrderInfo">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="request" type="tns:EMUpdateEBOFOrderRequest" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="UpdateEBOFOrderInfoResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="QwestSFDCResponse:QwestSFDCResponse" nillable="true"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <!--Message for the header parts-->
  <message name="Header">
    <part name="AllowFieldTruncationHeader" element="tns:AllowFieldTruncationHeader"/>
    <part name="CallOptions" element="tns:CallOptions"/>
    <part name="DebuggingHeader" element="tns:DebuggingHeader"/>
    <part name="DebuggingInfo" element="tns:DebuggingInfo"/>
    <part name="SessionHeader" element="tns:SessionHeader"/>
  </message>
  <!--Operation Messages-->
  <message name="SFDC_Order_UpdateRequest">
    <part element="tns:SFDC_Order_Update" name="parameters"/>
  </message>
  <message name="SFDC_Order_UpdateResponse">
    <part element="tns:SFDC_Order_UpdateResponse" name="parameters"/>
  </message>
  <message name="SFDC_Service_Detail_UpdateRequest">
    <part element="tns:SFDC_Service_Detail_Update" name="parameters"/>
  </message>
  <message name="SFDC_Service_Detail_UpdateResponse">
    <part element="tns:SFDC_Service_Detail_UpdateResponse" name="parameters"/>
  </message>
  <message name="UpdateEBOFOrderInfoRequest">
    <part element="tns:UpdateEBOFOrderInfo" name="parameters"/>
  </message>
  <message name="UpdateEBOFOrderInfoResponse">
    <part element="tns:UpdateEBOFOrderInfoResponse" name="parameters"/>
  </message>
  <portType name="Ws_EMPortType">
    <operation name="SFDC_Order_Update">
      <input message="tns:SFDC_Order_UpdateRequest"/>
      <output message="tns:SFDC_Order_UpdateResponse"/>
    </operation>
    <operation name="SFDC_Service_Detail_Update">
      <input message="tns:SFDC_Service_Detail_UpdateRequest"/>
      <output message="tns:SFDC_Service_Detail_UpdateResponse"/>
    </operation>
    <operation name="UpdateEBOFOrderInfo">
      <input message="tns:UpdateEBOFOrderInfoRequest"/>
      <output message="tns:UpdateEBOFOrderInfoResponse"/>
    </operation>
  </portType>
  <binding name="Ws_EMBinding" type="tns:Ws_EMPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="SFDC_Order_Update">
      <soap:operation soapAction=""/>
      <input>
        <soap:header use="literal" part="SessionHeader" message="tns:Header"/>
        <soap:header use="literal" part="CallOptions" message="tns:Header"/>
        <soap:header use="literal" part="DebuggingHeader" message="tns:Header"/>
        <soap:header use="literal" part="AllowFieldTruncationHeader" message="tns:Header"/>
        <soap:body use="literal" parts="parameters"/>
      </input>
      <output>
        <soap:header use="literal" part="DebuggingInfo" message="tns:Header"/>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SFDC_Service_Detail_Update">
      <soap:operation soapAction=""/>
      <input>
        <soap:header use="literal" part="SessionHeader" message="tns:Header"/>
        <soap:header use="literal" part="CallOptions" message="tns:Header"/>
        <soap:header use="literal" part="DebuggingHeader" message="tns:Header"/>
        <soap:header use="literal" part="AllowFieldTruncationHeader" message="tns:Header"/>
        <soap:body use="literal" parts="parameters"/>
      </input>
      <output>
        <soap:header use="literal" part="DebuggingInfo" message="tns:Header"/>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateEBOFOrderInfo">
      <soap:operation soapAction=""/>
      <input>
        <soap:header use="literal" part="SessionHeader" message="tns:Header"/>
        <soap:header use="literal" part="CallOptions" message="tns:Header"/>
        <soap:header use="literal" part="DebuggingHeader" message="tns:Header"/>
        <soap:header use="literal" part="AllowFieldTruncationHeader" message="tns:Header"/>
        <soap:body use="literal" parts="parameters"/>
      </input>
      <output>
        <soap:header use="literal" part="DebuggingInfo" message="tns:Header"/>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="Ws_EMService">
    <documentation/>
    <port binding="tns:Ws_EMBinding" name="Ws_EM">
      <soap:address location="https://cs61.salesforce.com/services/Soap/class/Ws_EM"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cs61.salesforce.com/services/Soap/class/Ws_EM</con:endpoint></con:endpoints><con:operation id="006039e6-96d5-4a65-9af5-97ccb95b123b" isOneWay="false" action="" name="SFDC_Order_Update" bindingOperationName="SFDC_Order_Update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d037d6b-24a9-4cc2-a922-5e30f12a832c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cs61.salesforce.com/services/Soap/class/Ws_EM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://soap.sforce.com/schemas/class/Ws_EM">\r
   <soapenv:Header>\r
      <ws:AllowFieldTruncationHeader>\r
         <ws:allowFieldTruncation>?</ws:allowFieldTruncation>\r
      </ws:AllowFieldTruncationHeader>\r
      <ws:DebuggingHeader>\r
         <!--Zero or more repetitions:-->\r
         <ws:categories>\r
            <ws:category>?</ws:category>\r
            <ws:level>?</ws:level>\r
         </ws:categories>\r
         <ws:debugLevel>?</ws:debugLevel>\r
      </ws:DebuggingHeader>\r
      <ws:CallOptions>\r
         <ws:client>?</ws:client>\r
      </ws:CallOptions>\r
      <ws:SessionHeader>\r
         <ws:sessionId>?</ws:sessionId>\r
      </ws:SessionHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ws:SFDC_Order_Update>\r
         <ws:request>\r
            <!--Optional:-->\r
            <ws:OpportunityId>?</ws:OpportunityId>\r
            <!--Optional:-->\r
            <ws:RequestId>?</ws:RequestId>\r
            <!--Optional:-->\r
            <ws:RequestStatus>?</ws:RequestStatus>\r
         </ws:request>\r
      </ws:SFDC_Order_Update>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.sforce.com/schemas/class/Ws_EM/Ws_EMPortType/SFDC_Order_UpdateRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4742706c-5cb4-42d4-a412-979884ac6586" isOneWay="false" action="" name="SFDC_Service_Detail_Update" bindingOperationName="SFDC_Service_Detail_Update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92f5bdb7-4f55-493c-9aaf-dd86fa847dd3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cs61.salesforce.com/services/Soap/class/Ws_EM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://soap.sforce.com/schemas/class/Ws_EM">\r
   <soapenv:Header>\r
      <ws:AllowFieldTruncationHeader>\r
         <ws:allowFieldTruncation>?</ws:allowFieldTruncation>\r
      </ws:AllowFieldTruncationHeader>\r
      <ws:DebuggingHeader>\r
         <!--Zero or more repetitions:-->\r
         <ws:categories>\r
            <ws:category>?</ws:category>\r
            <ws:level>?</ws:level>\r
         </ws:categories>\r
         <ws:debugLevel>?</ws:debugLevel>\r
      </ws:DebuggingHeader>\r
      <ws:CallOptions>\r
         <ws:client>?</ws:client>\r
      </ws:CallOptions>\r
      <ws:SessionHeader>\r
         <ws:sessionId>?</ws:sessionId>\r
      </ws:SessionHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ws:SFDC_Service_Detail_Update>\r
         <ws:request>\r
            <!--Optional:-->\r
            <ws:CoreSalesOrderId>?</ws:CoreSalesOrderId>\r
            <!--Optional:-->\r
            <ws:CustomerAcctId>?</ws:CustomerAcctId>\r
            <!--Optional:-->\r
            <ws:OESOrderId>?</ws:OESOrderId>\r
            <!--Optional:-->\r
            <ws:ProductAcctId>?</ws:ProductAcctId>\r
            <!--Optional:-->\r
            <ws:RequestId>?</ws:RequestId>\r
            <!--Optional:-->\r
            <ws:ServiceAddressId>?</ws:ServiceAddressId>\r
         </ws:request>\r
      </ws:SFDC_Service_Detail_Update>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.sforce.com/schemas/class/Ws_EM/Ws_EMPortType/SFDC_Service_Detail_UpdateRequest"/></con:call></con:operation><con:operation id="c421d9a7-4737-4de4-9fdd-becb43823333" isOneWay="false" action="" name="UpdateEBOFOrderInfo" bindingOperationName="UpdateEBOFOrderInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5af91f29-c7a5-4dc2-9ced-ad3983ce479d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cs61.salesforce.com/services/Soap/class/Ws_EM</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://soap.sforce.com/schemas/class/Ws_EM">\r
   <soapenv:Header>\r
      <ws:AllowFieldTruncationHeader>\r
         <ws:allowFieldTruncation>?</ws:allowFieldTruncation>\r
      </ws:AllowFieldTruncationHeader>\r
      <ws:DebuggingHeader>\r
         <!--Zero or more repetitions:-->\r
         <ws:categories>\r
            <ws:category>?</ws:category>\r
            <ws:level>?</ws:level>\r
         </ws:categories>\r
         <ws:debugLevel>?</ws:debugLevel>\r
      </ws:DebuggingHeader>\r
      <ws:CallOptions>\r
         <ws:client>?</ws:client>\r
      </ws:CallOptions>\r
      <ws:SessionHeader>\r
         <ws:sessionId>?</ws:sessionId>\r
      </ws:SessionHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ws:UpdateEBOFOrderInfo>\r
         <ws:request>\r
            <!--Zero or more repetitions:-->\r
            <ws:AccountIds>?</ws:AccountIds>\r
            <!--Optional:-->\r
            <ws:ActionCode>?</ws:ActionCode>\r
            <!--Optional:-->\r
            <ws:CUID>?</ws:CUID>\r
            <!--Optional:-->\r
            <ws:OpportunityId>?</ws:OpportunityId>\r
            <!--Optional:-->\r
            <ws:ReasonDesc>?</ws:ReasonDesc>\r
            <!--Optional:-->\r
            <ws:RequestId>?</ws:RequestId>\r
            <!--Optional:-->\r
            <ws:RequestStatus>?</ws:RequestStatus>\r
            <!--Optional:-->\r
            <ws:ServiceCategoryCd>?</ws:ServiceCategoryCd>\r
         </ws:request>\r
      </ws:UpdateEBOFOrderInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.sforce.com/schemas/class/Ws_EM/Ws_EMPortType/UpdateEBOFOrderInfoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="80786ce5-320c-42b0-8757-6a207e300d5a" name="TS01"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4290cb22-b637-42d8-afa7-391c0770f722" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01" searchProperties="true"><con:settings/><con:testStep type="request" id="65dd5c85-b9a9-4b83-ae07-fe75afc06814" name="getBank - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="417692bd-c8d8-4e85-8db9-be027fc6b1a9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/BLZLocalService</con:endpoint><con:request/><con:assertion type="XPath Match" id="60da3076-7e51-4241-ab61-0cea3da53187" name="Validate bic code"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';
//ns1:getBankResponse/ns1:details/ns1:bic</path><content>ESSEDE5F550</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="SOAP Response" id="050c8364-71c3-4cbc-bb97-2e72d80ee9a8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="bd026682-cc66-4e8c-8bd8-2d5be9d1596d" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="9367d77a-db48-43c6-9197-dd963f494423" name="Not SOAP Fault"/><con:assertion type="XQuery Match" id="d2cf3e1e-08f2-448b-92bb-690df034161a" name="XQuery Match"><con:configuration/></con:assertion><con:assertion type="XPath Match" id="4725e3ca-31a9-41be-8bf1-f3f864d1e88f" name="XPath Match"><con:configuration/></con:assertion><con:assertion type="XPath Match" id="df9d23bc-36af-46d6-8d00-52830fd349c5"><con:configuration/></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="90168012-706b-443e-9423-170f7a7aeb7d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>transfer_blzCode</con:name><con:sourceType>blzCode</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType xsi:nil="true"/><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>transfer_bicCode</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>getBank - Request 1</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';
//ns1:getBankResponse/ns1:details/ns1:bic</con:sourcePath><con:targetType>bicCode</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>transfer_ort</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>getBank - Request 1</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';
//ns1:getBankResponse/ns1:details/ns1:ort</con:sourcePath><con:targetType>ort</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>transer_plz</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>getBank - Request 1</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';
//ns1:getBankResponse/ns1:details/ns1:plz</con:sourcePath><con:targetType>plz</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="823c9db9-879a-4149-8118-3c8210179f84"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>bicCode</con:name><con:value>ESSEDE5F550</con:value></con:property><con:property><con:name>blzCode</con:name><con:value>55010800</con:value></con:property><con:property><con:name>ort</con:name><con:value>Mainz a Rhein</con:value></con:property><con:property><con:name>plz</con:name><con:value>55116</con:value></con:property></con:properties></con:config></con:testStep><con:properties><con:property><con:name>blzCode</con:name><con:value>55010800</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="71a5850a-27bf-4bda-a7f6-d6c5ea783dd2" name="TS02-Test Suite for supplier service"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1bfa3763-365c-4c8d-a18c-fe4c920c1e85" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01" searchProperties="true"><con:settings/><con:testStep type="request" id="3ce4a936-20c3-416d-8d53-aa4c805cd0dd" name="GetSupplierByZipCode - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MediCareSupplierSoap</con:interface><con:operation>GetSupplierByZipCode</con:operation><con:request name="GetSupplierByZipCode - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c993a76c-767c-4d2f-b326-8db9e0c708d9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>75070</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="XPath Match" id="e2661f1e-8fd3-46bc-b225-078f2e9985b3" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://www.webservicex.net/';
 count(//ns1:GetSupplierByZipCodeResponse/ns1:SupplierDataLists/ns1:SupplierDatas/ns1:SupplierData[ns1:ZipPlus4='75070'])</path><content>13</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="SOAP Response" id="7b1d1521-7ad6-40d6-8c38-7f16990508cc" name="SOAP Response"/><con:assertion type="XQuery Match" id="983a4956-dfec-4082-b8bc-d901b6135212" name="XQuery Match"><con:configuration><path><![CDATA[declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://www.webservicex.net/';
<test>
{
for $supplier in //ns1:SupplierData
return
<testsupplier>
<zip>{data($supplier/ns1:ZipPlus4/text())}</zip>
<city>{data($supplier/ns1:City/text())}</city>
</testsupplier>
}
</test>]]></path><content><![CDATA[<test>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MC KINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MC KINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MC KINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MC KINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MC KINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
  <testsupplier>
    <zip>75070</zip>
    <city>MCKINNEY</city>
  </testsupplier>
</test>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByZipCode"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="27404165-da54-47e0-b794-89b2066d20b5" name="TS03-Groovy Automation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="33be7193-c41a-45bd-9f30-9e8f6ec33551" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01_Data Type ,Log,$" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Data Types" id="5359e4cf-77a5-42ed-8982-f4826a40dfea"><con:settings/><con:config><script>def name
String firstName
int age
double salary
String country

age=26
firstName='Ketan'
salary=1100000
country = 'India'

log.info firstName
log.warn age
log.error salary

log.info "Country = $country"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cb3ffb04-82d8-4b03-97e6-536ec44f8a85" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC02-Conditions" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="72e064a1-5e9b-4635-aa56-7165bd1010c8"><con:settings/><con:config><script>boolean isPassed
String grade

ifPassed=true

if(isPassed==true){
log.info "Congratulations"
}
else
{

log.info "At least you didn't cheat"	
}

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="89c9a92b-852a-4bc9-a251-58b7513b8ee7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC03-List" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="6346ce7d-12cf-49ba-9ac7-fee900b958b9"><con:settings/><con:config><script>

def fruits = ['Apple','Banana','Grapes']

fruits.each{
	fruitName -> 
	log.info fruitName
}

//contains

boolean b = fruits.contains('Papaya')

if(b)
{
log.info b	
}

else
{
	log.warn false
}


//adding to list

fruits.add('Papaya')
fruits &lt;&lt; 'Mango'

log.info fruits


//remove from list

fruits.remove('Apple')
log.info fruits</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ac7e4eb0-d524-493d-840a-c2703bfbb1a5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC04-Maps" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="80ec7a7f-ff61-40c5-9333-bc50cc42ccb9"><con:settings/><con:config><script>def countries = ['IND': 'INDIA','US':'USA']

log.info countries.containsKey('IND')
log .info countries.get('IND')
countries.put('GB','Great Britain')

log.info countries

countries.each{
	country ->
	log.info country
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2128bd26-b13f-4e83-949c-d9fb3a17e20e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC05-Assertions" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="e0e827b9-b83d-4078-b5ab-1811e0e7b8db"><con:settings/><con:config><script>String expected,actual

expected = 'john'
actual='jhon'

//assert expected == actual

fruits = ['apple','banana']

assert true == fruits.contains('Mango'),"My unique Message"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3f172781-3eeb-4cd5-9f5a-a239a3b4defe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC06-testRunner.testCase.testSuite.project.workspace.name" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="0b6f3fac-1b98-4613-befd-d1a051959d30"><con:settings/><con:config><script>//test case name
log.info testRunner.testCase.name

//test suite name
log.info testRunner.testCase.testSuite.name

//test Project name
log.info testRunner.testCase.testSuite.project.name

//test Workspace name
log.info testRunner.testCase.testSuite.project.workspace.name

//run Test Case from another Test Suite
log.info testRunner.
testCase.
testSuite.
project.
getTestSuiteByName('TS02-Test Suite for supplier service').
getTestCaseByName('TC01').name


//print all Test Suite
def testSuiteMap=testRunner.testCase.testSuite.project.testSuites

testSuiteMap.each{
tsEntry ->
log.info tsEntry.key 
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f731dae8-efa3-462f-b2ae-72cad161b410" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC07-import groovy.util.XmlSlurper" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="a3004d7e-b75e-4e00-ac02-88320caad94c"><con:settings/><con:config><script>import groovy.util.XmlSlurper
//Define Test Step
//Define xmlslurper

 //testRunner
 //run(testRunner,context)
 //contentASXml
 
def testStepName='getBank'
def xml = new XmlSlurper()

def testStep=testRunner.testCase.getTestStepByName(testStepName)
def response=testStep.run(testRunner,context)


def Envelope=xml.parseText(response.responseContentAsXml)
log.info Envelope
log.info Envelope.Body.getBankResponse.details.bic

</script></con:config></con:testStep><con:testStep type="request" id="392e2b4e-ce4e-440a-9774-00fdb61954b3" name="getBank"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="71aa8b0c-bfdf-4c05-9a0b-7b8b70f41abc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/BLZLocalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>55010111</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="14f47160-e6cf-4b81-8989-21bef55fc8b8" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ddd385e9-6b5e-49b4-bf9d-5c86ecd8f3cd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC08-Working With File" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="67545314-47dd-4f7b-80ce-cffb67b2ddee"><con:settings/><con:config><script>File file = new File("C:\\Users\\ab42596\\Desktop\\blz-service-data.txt")
//eacLine
//line
//l=l.split(',')
file.eachLine{
	line ->
	//log.info line
	def l = line.split(',')
	log.info l[0] // blzcode
	log.info l[1] //bezeichnung
	log.info l[2] //bic
	log.info l[3] //ort
	log.info l[4] //plz
}


</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9ac826e7-c6e5-41c1-83e1-1657cd6d0b9c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC09-Data Driven testing using Groovy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="6358464a-ab3e-40a4-afd0-0c26d6a98f2f"><con:settings/><con:config><script>import com.eviware.soapui.support.GroovyUtils
def requestXmlHolder,responseXmlHolder
def groovyUtils= new GroovyUtils(context)

//Read the bank service data from file
File file = new File("C:\\Users\\ab42596\\Desktop\\blz-service-data.txt")
def blzcode
file.eachLine{
	line ->
	//log.info line
	def l = line.split(',')
	blzcode= l[0] // blzcode
	fbezeichnung=l[1]

//updating the request with blzcode
requestXmlHolder=groovyUtils.getXmlHolder("getBank#Request")
requestXmlHolder["//blz:blz"]=blzcode
requestXmlHolder.updateProperty()

//Run request
testRunner.testCase.getTestStepByName('getBank').run(testRunner,context)

//Storing the response of bezeichnung bic ort plz
responseXmlHolder=groovyUtils.getXmlHolder("getBank#Response")
def test= responseXmlHolder["//ns1:bezeichnung"]
log.info " $blzcode : $fbezeichnung"
assert test == fbezeichnung,"$blzcode"
//write assertion
}










</script></con:config></con:testStep><con:testStep type="request" id="339c9af3-934b-471e-a349-4a1a4897bee2" name="getBank"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5abab871-ebb5-475f-a52d-8684e257dad7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/BLZLocalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">
   <soapenv:Header/>
   <soapenv:Body>
      <blz:getBank>
         <blz:blz>55020500</blz:blz>
      </blz:getBank>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c9998909-a7af-483b-958a-d06fad88e6bf" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="27cd82c4-198f-4f02-897f-73285febc730" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC10-Read data from Excel" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="2846cb5c-9f71-4f7b-bff1-b431aaf2923b"><con:settings/><con:config><script>import jxl.*

File f =new File("C:\\Users\\ab42596\\Desktop\\Data-for-BLZService.xls")
//Create workbook instance
Workbook wb=Workbook.getWorkbook(f)
//Load the sheet
Sheet sheet=wb.getSheet(0)
//i want to read the data in the sheet
int noOfRows=sheet.getRows()-1
//loop through the records
for(int rowIdx in 1..noOfRows){	
	//sheet.getCell(col index,row index)
	
	log.info sheet.getCell(0,rowIdx).getContents()
	log.info sheet.getCell(1,rowIdx).getContents()
}
wb.close()
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8eca5621-4478-4cdd-bb1f-7589e1bc952d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC11-Read from sql" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="f586014f-0d8f-489d-bc08-bc5d54c30791"><con:settings/><con:config><script>import groovy.sql.Sql

String sqlStmt='SELECT * FROM TABL_NAME'


def sql=Sql.newInstance('jdbc:mysql:prod_pdb.dev.qintra.com:1535/poim_message_transaction?user=GBUSTEST&amp;password=TESTGBUS','GBUSTEST','TESTGBUS','com.mysql.jdbc.Driver')

sql.eachRow(sqlStmt){

	x ->
	log.info x['blz_code']
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e590d5d8-71ac-4a98-8cb3-685ce2d4d717" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC12-Create Batch File" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="add6717b-ee5f-44fd-8469-59fc3acae289"><con:settings/><con:config><script>Right Click on Project
Launch Test Runner

Basic tab

TestSuite:&lt;all>
TestCase:&lt;all>

Reports tab

Export JUnit Results:Export all results

"C:\Program Files\SmartBear\SoapUI-5.3.0\bin\testrunner.bat" -s"TS01-Get Put Post Delete" -a -f"C:\Users\ab42596\Desktop\SOAP UI Test Report" "C:\Users\ab42596\Desktop\SoapUI Project\Swagger-soapui-project.xml"




</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ba1f47df-10f7-4c4c-9a83-b938f4f8cfa1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC13-Jenkins" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="c5932e33-1611-4f09-a3d2-a2862a0a105d"><con:settings/><con:config><script><![CDATA[java -jar C:\Users\ab42596\Desktop\jenkins.war --httpPort=8081
New Item
Maven Project-Maven BankProject
GitHub project
Project url :
https://github.com/iamsethi/SoapUiRepository.git/
SCM
Git
https://github.com/iamsethi/SoapUiRepository.git
Build
Root POM - pom.xml
Goals and options - test

GitHub mein pom(from udemy) and project ki xml save krdo
pom mein project path mein xml ka name dedo-Bank-Project-soapui-project.xml(Imp only xml ,no C:/... nothing like that)

internal working-jenkins take the source code from git to C:\Users\ab42596\.jenkins\workspace\YOUR_BRANCH_NAME
and now from pom.xml it'll get to know that xml to run is Bank-Project-soapui-project.xml





*********************************WORKING POM.XML*****************************************************

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>soapui</groupId>
	<artifactId>testing</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>testing</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>smartbear-sweden-plugin-repository</id>
			<url>http://www.soapui.org/repository/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>com.smartbear.soapui</groupId>
				<artifactId>soapui-maven-plugin</artifactId>
				<version>5.2.0</version>
				<executions>
					<execution>
						<id>My Project test cases</id>
						<configuration>
						<!--ENTER YOUR PROJECT LOCATION HERE -->
							<projectFile>Bank-Project-soapui-project.xml</projectFile>
							<outputFolder>target/surefire-reports</outputFolder>
							<junitReport>true</junitReport>
							<exportwAll>true</exportwAll>
							<printReport>true</printReport>
							<testFailIgnore>true</testFailIgnore>
							<!--junit results file --> 
							<junitReport>true</junitReport>
						</configuration>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>0.7.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.sourceforge.jexcelapi/jxl -->
<dependency>
    <groupId>net.sourceforge.jexcelapi</groupId>
    <artifactId>jxl</artifactId>
    <version>2.6</version>
</dependency>

	</dependencies>


</project>

]]></script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>